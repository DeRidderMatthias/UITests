// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using System.IO;

[TestFixture]
public class VoederproductieTestsTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  private WebDriverWait wait;
  [SetUp]
  public void SetUp() {
    string solution_dir = Path.GetDirectoryName(Path.GetDirectoryName(TestContext.CurrentContext.TestDirectory));
    ChromeOptions options = new();
    options.AddArgument("headless");
    driver = new ChromeDriver(solution_dir, options);
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
    wait=new WebDriverWait(driver, TimeSpan.FromSeconds(5));

    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    driver.Navigate().GoToUrl("https://localhost:5001/Inputform/ClearTestData/0000000000");
    driver.Navigate().GoToUrl("https://localhost:5001/");
    {
      var elements2 = driver.FindElements(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr"));
      Assert.True(elements2.Count == 0);
    }
    driver.FindElement(By.CssSelector("form[action=\"/Inputform\"] button[type=submit]")).Click();
    js.ExecuteScript("document.getElementById(\"KBO\").value=\"0000000000\";");
    driver.FindElement(By.CssSelector("form#form input[type=\"button\"]")).Click();
    wait.Until(ExpectedConditions.ElementExists(By.CssSelector("div.modal.show button[name=\"submit\"]")));
    driver.FindElement(By.CssSelector("div.modal.show button[name=\"submit\"]")).Click();
    driver.Navigate().GoToUrl("https://localhost:5001/");
    wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr//a[contains(@class,\"btn\")]"))).Click();
    driver.FindElement(By.CssSelector("#inputnav li:nth-of-type(2) a")).Click();
  }
  [TearDown]
  protected void TearDown() {
    driver.Navigate().GoToUrl("https://localhost:5001/Inputform/ClearTestData/0000000000");
    driver.Navigate().GoToUrl("https://localhost:5001/");
    driver.FindElement(By.CssSelector(".nav-item > form > button[type=\"submit\"]")).Click();
    driver.Quit();
  }
  [Test]
  public void ManageTeelten() {
        driver.FindElement(By.CssSelector("#teelten > .btn")).Click();
        driver.FindElement(By.CssSelector("#select2-Naam-container")).Click();
        driver.FindElement(By.XPath("//*[contains(@class,\"select2-results\")]//li[contains(.,\"Beweid grasland met klaver\")]")).Click();
        driver.FindElement(By.CssSelector(".submitgroup .btn-primary")).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#RequiredModal button[name='submit']"))).Click();
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//tr[contains(.,\"Beweid grasland met klaver\")]//a[contains(@class,\"btn-outline-danger\")]"))).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#Confirm #ConfirmButton"))).Click();
        while(true) {
            if((Boolean) (js).ExecuteScript("return jQuery.active == 0")) {
                break;
            }
            Thread.Sleep(100);
        }
        driver.FindElement(By.CssSelector("#inputnav li:nth-of-type(2) a")).Click();
        var elements = driver.FindElements(By.XPath("//tr[contains(.,\"Beweid grasland met klaver\")]"));
        Assert.True(elements.Count == 0);
  }
    [Test]
    public void EditVoederproductie() {
        driver.FindElement(By.CssSelector("textarea[name='Opmerkingen']")).SendKeys("dit is een opmerking");
        driver.FindElement(By.CssSelector(".form-group > input[type='button'].btn-primary")).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#RequiredModal button[name='submit']"))).Click();
        driver.Navigate().Refresh();
        Assert.That(driver.FindElement(By.CssSelector("textarea[name='Opmerkingen']")).GetAttribute("value"), Is.EqualTo("dit is een opmerking"));
    }
    [Test]
    public void EditTeelt() {
        driver.FindElement(By.CssSelector("#teelten > .btn")).Click();
        driver.FindElement(By.CssSelector("#select2-Naam-container")).Click();
        driver.FindElement(By.XPath("//*[contains(@class,\"select2-results\")]//li[contains(.,\"Beweid grasland met klaver\")]")).Click();
        driver.FindElement(By.CssSelector("input[name='Oppervlakte']")).SendKeys("300");
        driver.FindElement(By.CssSelector("input[name='OppervlaktePermanentGrasland']")).SendKeys("100");
        driver.FindElement(By.CssSelector("input[name='ScheurPeriode']")).SendKeys("3");
        driver.FindElement(By.CssSelector("input[name='PercentKlaver']")).SendKeys("40");
        driver.FindElement(By.CssSelector("input[name='HasBodemanalyse'][type='checkbox']")).Click();
        driver.FindElement(By.CssSelector("select[name='Grondsoort']")).Click();
        driver.FindElement(By.XPath("//select[@name='Grondsoort']//option[contains(.,\"Zandleem\")]")).Click();
        driver.FindElement(By.CssSelector("input[name='PH']")).SendKeys("8");
        driver.FindElement(By.CssSelector("input[name='OrgKoolstof']")).SendKeys("30");
        Assert.False(driver.FindElement(By.CssSelector("input[name='DrainageOppervlakte']")).Displayed);
        driver.FindElement(By.CssSelector("input[name='HasDrainage'][type='checkbox']")).Click();
        Assert.True(driver.FindElement(By.CssSelector("input[name='DrainageOppervlakte']")).Displayed);
        driver.FindElement(By.CssSelector("input[name='DrainageOppervlakte']")).SendKeys("50");
        Assert.False(driver.FindElement(By.CssSelector("input[name='ErosiePerceelOppervlakte']")).Displayed);
        driver.FindElement(By.CssSelector("input[name='HasErosieGevoeligePercelen'][type='checkbox']")).Click();
        Assert.True(driver.FindElement(By.CssSelector("input[name='ErosiePerceelOppervlakte']")).Displayed);
        driver.FindElement(By.CssSelector("input[name='ErosiePerceelOppervlakte']")).SendKeys("50");
        driver.FindElement(By.CssSelector("input[name='Opbrengst']")).SendKeys("100");
        driver.FindElement(By.CssSelector("select[name='Opbrengsteenheid']")).Click();
        driver.FindElement(By.CssSelector("select[name='Opbrengsteenheid']")).FindElement(By.XPath("//option[contains(.,\"kg/ha\")]")).Click();
        driver.FindElement(By.CssSelector("input[name='HasKuilanalyse'][type='checkbox']")).Click();
        driver.FindElement(By.CssSelector("input[name='DSPct']")).Clear();
        driver.FindElement(By.CssSelector("input[name='DSPct']")).SendKeys("20");
        driver.FindElement(By.CssSelector("input[name='OEB']")).Clear();
        driver.FindElement(By.CssSelector("input[name='OEB']")).SendKeys("30");
        driver.FindElement(By.CssSelector("input[name='HasKuilanalyse'][type='checkbox']")).Click();
        wait.Until(ExpectedConditions.TextToBePresentInElementValue(By.CssSelector("input[name='DSPct']"), "37"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='DSPct']")).GetAttribute("readonly"),Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='DSPct']")).GetAttribute("value"),Is.EqualTo("37"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OEB']")).GetAttribute("readonly"),Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OEB']")).GetAttribute("value"),Is.EqualTo("55"));
        driver.FindElement(By.CssSelector("input[name='VerkochteHoeveelheid']")).Clear();
        driver.FindElement(By.CssSelector("input[name='VerkochteHoeveelheid']")).SendKeys("20");
        driver.FindElement(By.CssSelector("input[name='OogstRestenAfvoer']")).Clear();
        driver.FindElement(By.CssSelector("input[name='OogstRestenAfvoer']")).SendKeys("21");
        driver.FindElement(By.CssSelector("textarea[name='Opmerkingen']")).SendKeys("dit is een opmerking");
        driver.FindElement(By.CssSelector("input[name='Derogatie']")).SendKeys("24");
        driver.FindElement(By.CssSelector(".submitgroup .btn-primary")).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#RequiredModal button[name='submit']"))).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#teelten a.btn-outline-warning"))).Click();
        Assert.That(driver.FindElement(By.CssSelector("input[name='Oppervlakte']")).GetAttribute("value"), Is.EqualTo("300"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OppervlaktePermanentGrasland']")).GetAttribute("value"), Is.EqualTo("100"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='ScheurPeriode']")).GetAttribute("value"), Is.EqualTo("3"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='PercentKlaver']")).GetAttribute("value"), Is.EqualTo("40"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='HasBodemanalyse'][type='checkbox']")).GetAttribute("value"), Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("select[name='Grondsoort']")).GetAttribute("value"), Is.EqualTo("Zandleem"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='PH']")).GetAttribute("value"), Is.EqualTo("8"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OrgKoolstof']")).GetAttribute("value"), Is.EqualTo("30"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='HasDrainage'][type='checkbox']")).GetAttribute("value"), Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='DrainageOppervlakte']")).GetAttribute("value"), Is.EqualTo("50"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='HasErosieGevoeligePercelen'][type='checkbox']")).GetAttribute("value"), Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='ErosiePerceelOppervlakte']")).GetAttribute("value"), Is.EqualTo("50"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='Opbrengst']")).GetAttribute("value"), Is.EqualTo("100"));
        Assert.That(driver.FindElement(By.CssSelector("select[name='Opbrengsteenheid']")).GetAttribute("value"), Is.EqualTo("kg/ha"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='DSPct']")).GetAttribute("value"), Is.EqualTo("37"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='DSPct']")).GetAttribute("readonly"), Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OEB']")).GetAttribute("value"), Is.EqualTo("55"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OEB']")).GetAttribute("readonly"), Is.EqualTo("true"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='VerkochteHoeveelheid']")).GetAttribute("value"), Is.EqualTo("20"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='OogstRestenAfvoer']")).GetAttribute("value"), Is.EqualTo("21"));
        Assert.That(driver.FindElement(By.CssSelector("textarea[name='Opmerkingen']")).GetAttribute("value"), Is.EqualTo("dit is een opmerking"));
        Assert.That(driver.FindElement(By.CssSelector("input[name='Derogatie']")).GetAttribute("value"), Is.EqualTo("24"));
    }
    [Test]
    public void EditBemesting() {
        driver.FindElement(By.CssSelector("#teelten > .btn")).Click();
        driver.FindElement(By.CssSelector("#select2-Naam-container")).Click();
        driver.FindElement(By.XPath("//*[contains(@class,\"select2-results\")]//li[contains(.,\"Beweid grasland zonder klaver\")]")).Click();
        driver.FindElement(By.CssSelector(".submitgroup .btn-primary")).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#RequiredModal button[name='submit']"))).Click();
        wait.Until(ExpectedConditions.ElementExists(By.XPath("//tr[contains(.,\"Beweid grasland zonder klaver\")]//a[contains(@class,\"btn-outline-warning\")]"))).Click();
        driver.FindElement(By.CssSelector("#bemesting > .form-group > .btn")).Click();
        driver.FindElement(By.CssSelector("select[name=\"Organisch\"]")).Click();
        driver.FindElement(By.CssSelector("select[name=\"Organisch\"]")).FindElement(By.XPath("//option[contains(.,\"Organisch\")]")).Click();
        driver.FindElement(By.CssSelector("#select2-meststoffen-select-container")).Click();
        driver.FindElement(By.XPath("//*[contains(@class,\"select2-results\")]//li[contains(.,\"Vaste mest runderen\")]")).Click();
        driver.FindElement(By.CssSelector("select[name=\"Toedieningswijze\"]")).Click();
        driver.FindElement(By.CssSelector("select[name=\"Toedieningswijze\"]")).FindElement(By.XPath("//option[contains(.,\"Onderploegen\")]")).Click();
        driver.FindElement(By.CssSelector("input[name=\"N\"]")).Clear();
        driver.FindElement(By.CssSelector("input[name=\"N\"]")).SendKeys("20.5");
        driver.FindElement(By.CssSelector("input[name=\"P\"]")).Clear();
        driver.FindElement(By.CssSelector("input[name=\"P\"]")).SendKeys("25.3");
        driver.FindElement(By.CssSelector("input[name=\"K\"]")).Clear();
        driver.FindElement(By.CssSelector("input[name=\"K\"]")).SendKeys("13.8");
        driver.FindElement(By.CssSelector("label[for=\"defVal\"]")).Click();
        wait.Until(ExpectedConditions.TextToBePresentInElementValue(driver.FindElement(By.CssSelector("input[name=\"N\"]")), "7.1"));
        Assert.That(driver.FindElement(By.CssSelector("input[name=\"P\"]")).GetAttribute("value"), Is.EqualTo("2.9"));
        Assert.That(driver.FindElement(By.CssSelector("input[name=\"K\"]")).GetAttribute("value"), Is.EqualTo("8.8"));
        driver.FindElement(By.CssSelector(".submitgroup .btn-primary")).Click();
        wait.Until(ExpectedConditions.ElementToBeClickable(By.CssSelector("#RequiredModal button[name='submit']"))).Click();
        driver.FindElement(By.CssSelector("table[name=\"Bemesting\"]"))
            .FindElement(By.XPath("//tr[contains(.,\"Vaste mest runderen\")]"))
            .FindElement(By.CssSelector(".btn-outline-warning")).Click();
        Assert.That(driver.FindElement(By.CssSelector("select[name=\"Organisch\"]")).GetAttribute("value"), Is.EqualTo("0"));
        wait.Until(ExpectedConditions.TextToBePresentInElement(driver.FindElement(By.CssSelector("span.select2-selection__rendered")), "Vaste mest runderen"));
        Assert.That(driver.FindElement(By.CssSelector("select[name=\"Toedieningswijze\"]")).GetAttribute("value"), Is.EqualTo("Onderploegen"));
        Assert.That(driver.FindElement(By.CssSelector("input[name=\"N\"]")).GetAttribute("value"), Is.EqualTo("7.1"));
        Assert.That(driver.FindElement(By.CssSelector("input[name=\"P\"]")).GetAttribute("value"), Is.EqualTo("2.9"));
        Assert.That(driver.FindElement(By.CssSelector("input[name=\"K\"]")).GetAttribute("value"), Is.EqualTo("8.8"));
    }
}
