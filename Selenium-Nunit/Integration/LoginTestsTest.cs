// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using System.IO;

[TestFixture]
public class LoginTestsTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    string solution_dir = Path.GetDirectoryName(Path.GetDirectoryName(TestContext.CurrentContext.TestDirectory));
    driver = new ChromeDriver(solution_dir);
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void loginsuccessadmin() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("AdminMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("AdminPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(translate(.,\'ABCDEFGHIJKLOMNOPQRSTUVWXYZ\',\'abcdefghijklmnopqrstuvwxyz\'), \"AdminMail\")]"));
    Assert.True(elements.Count > 0);
    Assert.That(driver.Title, Is.EqualTo("Homepage admin - Klimrek"));
  }
  [Test]
  public void loginsuccessboer() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("BoerMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("BoerPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"BoerMail\")]"));
    Assert.True(elements.Count > 0);
  }
  [Test]
  public void loginsuccessconsulent() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"ConsulentMail\")]"));
    Assert.True(elements.Count > 0);
    Assert.That(driver.Title, Is.EqualTo("Homepage consultant - Klimrek"));
  }
  [Test]
  public void loginvalidationerrors() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("a");
    driver.FindElement(By.CssSelector("body")).Click();
    {
      WebDriverWait wait = new WebDriverWait(driver, System.TimeSpan.FromSeconds(3));
      wait.Until(driver => driver.FindElements(By.CssSelector("form#account span.field-validation-error #Input_Email-error")).Count > 0);
    }
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("valid@mail.com");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("Testpass1!");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.CssSelector("div.validation-summary-errors"));
    Assert.True(elements.Count > 0);
  }
  [Test]
  public void logoutsuccess() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"ConsulentMail\")]"));
    Assert.True(elements.Count > 0);
    Assert.That(driver.Title, Is.EqualTo("Homepage consultant - Klimrek"));
    driver.FindElement(By.CssSelector(".nav-item > form > button[type=\"submit\"]")).Click();
    Assert.That(driver.Title, Is.EqualTo("Login - Klimrek"));
    {
      var elements1 = driver.FindElements(By.CssSelector("a[href=\"/Manage\"]"));
      Assert.True(elements1.Count == 0);
    }
  }
}
