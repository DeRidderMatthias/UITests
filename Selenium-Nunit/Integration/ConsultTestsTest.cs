// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using System.IO;

[TestFixture]
public class ConsultTestsTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  private WebDriverWait wait;
  [SetUp]
  public void SetUp() {
    string solution_dir = Path.GetDirectoryName(Path.GetDirectoryName(TestContext.CurrentContext.TestDirectory));
    driver = new ChromeDriver(solution_dir);
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
    wait=new WebDriverWait(driver, TimeSpan.FromSeconds(5));
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void createConsult() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"ConsulentMail\")]"));
    Assert.True(elements.Count > 0);
    driver.Navigate().GoToUrl("https://localhost:5001/Inputform/ClearTestData/0000000000");
    driver.Navigate().GoToUrl("https://localhost:5001/");
    {
      var elements2 = driver.FindElements(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr"));
      Assert.True(elements2.Count == 0);
    }
    driver.FindElement(By.CssSelector("form[action=\"/Inputform\"] button[type=submit]")).Click();
    js.ExecuteScript("document.getElementById(\"KBO\").value=\"0000000000\";");
    driver.FindElement(By.CssSelector("form#form input[name=\"Boekhoudpakket\"]")).SendKeys("Boekhoudpakket #1");
    driver.FindElement(By.CssSelector("form#form input[name=\"Managementpakket\"]")).SendKeys("Managementpakket #1");
    driver.FindElement(By.CssSelector("form#form input[name=\"HasBioteelt\"][type=\"checkbox\"]")).Click();
    driver.FindElement(By.CssSelector("form#form input[name=\"NietBiologischeStromen\"]")).SendKeys("Geen stromen beschikbaar op dit moment");
    driver.FindElement(By.CssSelector("form#form input[name=\"Jaartal\"]")).SendKeys("2020");
    driver.FindElement(By.CssSelector("form#form [name=\"OpmerkingenConsultAlgemeen\"]")).SendKeys("Geen opmerkingen beschikbaar op dit moment");
    driver.FindElement(By.CssSelector("form#form input[type=\"button\"]")).Click();
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"Boekhoudpakket\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Boekhoudpakket #1"));
    }
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"Managementpakket\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Managementpakket #1"));
    }
    Assert.True(driver.FindElement(By.CssSelector("form#form input[name=\"HasBioteelt\"][type=\"checkbox\"]")).Selected);
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"NietBiologischeStromen\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Geen stromen beschikbaar op dit moment"));
    }
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"Jaartal\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("2020"));
    }
    {
      string value = driver.FindElement(By.CssSelector("form#form [name=\"OpmerkingenConsultAlgemeen\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Geen opmerkingen beschikbaar op dit moment"));
    }
    driver.Navigate().GoToUrl("https://localhost:5001/");
    wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr")));
  }
  [Test]
  public void createConsultWarning() {
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"ConsulentMail\")]"));
    Assert.True(elements.Count > 0);
    driver.Navigate().GoToUrl("https://localhost:5001/Inputform/ClearTestData/0000000000");
    driver.Navigate().GoToUrl("https://localhost:5001/");
    {
      var elements2 = driver.FindElements(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr"));
      Assert.True(elements2.Count == 0);
    }
    driver.FindElement(By.CssSelector("form[action=\"/Inputform\"] button[type=submit]")).Click();
    js.ExecuteScript("document.getElementById(\"KBO\").value=\"0000000000\";");
    driver.FindElement(By.CssSelector("form#form input[name=\"HasBioteelt\"][type=\"checkbox\"]")).Click();
    driver.FindElement(By.CssSelector("form#form input[name=\"NietBiologischeStromen\"]")).SendKeys("Geen stromen beschikbaar op dit moment");
    driver.FindElement(By.CssSelector("form#form input[name=\"Jaartal\"]")).SendKeys("2020");
    driver.FindElement(By.CssSelector("form#form [name=\"OpmerkingenConsultAlgemeen\"]")).SendKeys("Geen opmerkingen beschikbaar op dit moment");
    driver.FindElement(By.CssSelector("form#form input[type=\"button\"]")).Click();
    wait.Until(ExpectedConditions.ElementExists(By.CssSelector("div.modal.show button[name=\"submit\"]")));
    driver.FindElement(By.CssSelector("div.modal.show button[name=\"submit\"]")).Click();
    Assert.True(driver.FindElement(By.CssSelector("form#form input[name=\"HasBioteelt\"][type=\"checkbox\"]")).Selected);
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"NietBiologischeStromen\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Geen stromen beschikbaar op dit moment"));
    }
    {
      string value = driver.FindElement(By.CssSelector("form#form input[name=\"Jaartal\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("2020"));
    }
    {
      string value = driver.FindElement(By.CssSelector("form#form [name=\"OpmerkingenConsultAlgemeen\"]")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Geen opmerkingen beschikbaar op dit moment"));
    }
    driver.Navigate().GoToUrl("https://localhost:5001/");
    wait.Until(ExpectedConditions.ElementExists(By.XPath("//div[contains(@class,\"card\") and contains(.,\"0000000000\")]//tr")));
  }
  [Test]
  public void emptyfieldwarnings() {
    wait.IgnoreExceptionTypes(typeof(NoSuchElementException));
    driver.Navigate().GoToUrl("https://localhost:5001/Login");
    driver.Manage().Window.Size = new System.Drawing.Size(1000, 1000);
    driver.FindElement(By.CssSelector("form#account input[type=\"email\"]")).SendKeys("ConsulentMail");
    driver.FindElement(By.CssSelector("form#account input[type=\"password\"]")).SendKeys("ConsulentPass");
    driver.FindElement(By.CssSelector("form#account button[type=\"submit\"]:not([form])")).Click();
    var elements = driver.FindElements(By.XPath("//a[@href=\"/Manage\" and contains(., \"ConsulentMail\")]"));
    Assert.True(elements.Count > 0);
    driver.FindElement(By.CssSelector("form[action=\"/Inputform\"] button[type=submit]")).Click();
    driver.FindElement(By.CssSelector("form#form input[type=\"button\"]")).Click();
    wait.Until(ExpectedConditions.ElementExists(By.CssSelector("div.modal.show")));
  }
}
